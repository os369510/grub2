From: Dimitri John Ledkov <xnox@ubuntu.com>
Date: Wed, 22 Jul 2020 11:31:43 +0100
Subject: linuxefi: fail kernel validation without shim protocol. (v2)

This patch already backport as
0096-linuxefi-fail-kernel-validation-without-shim-protoco.patch
but some parts need to repick.

---

If certificates that signed grub are installed into db, grub can be
booted directly. It will then boot any kernel without signature
validation. The booted kernel will think it was booted in secureboot
mode and will implement lockdown, yet it could have been tampered.

This version of the patch skips calling verification, when booted
without secureboot. And is indented with gnu ident.

CVE-2020-15705

(referred from rhboot 97b11b8c5a3b1ce01277f555337ac1d01a9adb09)
Reported-by: Mathieu Trudel-Lapierre <cyphermox@ubuntu.com>
Signed-off-by: Dimitri John Ledkov <xnox@ubuntu.com>
---
 grub-core/loader/i386/efi/linux.c | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/grub-core/loader/i386/efi/linux.c b/grub-core/loader/i386/efi/linux.c
index 9c494e0..abef6f9 100644
--- a/grub-core/loader/i386/efi/linux.c
+++ b/grub-core/loader/i386/efi/linux.c
@@ -100,7 +100,7 @@ kernel_alloc(grub_efi_uintn_t size, const char * const errmsg)
 
       pages = BYTES_TO_PAGES(size);
       grub_dprintf ("linuxefi", "Trying to allocate %lu pages from %p\n",
-		    pages, (void *)max);
+		    (unsigned long)pages, (void *)(unsigned long)max);
 
       prev_max = max;
       addr = grub_efi_allocate_pages_real (max, pages,
@@ -376,6 +376,7 @@ grub_cmd_linux (grub_command_t cmd __attribute__ ((unused)),
 
   setup_header_end_offset = *((grub_uint8_t *)kernel + 0x201);
   grub_dprintf ("linuxefi", "copying %lu bytes from %p to %p\n",
+		(unsigned long)
 		MIN((grub_size_t)0x202+setup_header_end_offset,
 		    sizeof (*params)) - 0x1f1,
 		(grub_uint8_t *)kernel + 0x1f1,
